syntax = "proto3";

import "google/protobuf/empty.proto";

package specter_debugger_proto;

// ---------------------------- DebuggerService ------------------------------ //

service DebuggerService {
    rpc CreateSession(google.protobuf.Empty) returns (Session);
    rpc ListSessions(google.protobuf.Empty) returns (Sessions);

    rpc SetSource(SourceSet) returns (google.protobuf.Empty);

    rpc Start(Session) returns (google.protobuf.Empty);
    rpc Resume(Session) returns (google.protobuf.Empty);
    rpc Pause(Session) returns (google.protobuf.Empty);
    rpc Stop(Session) returns (google.protobuf.Empty);

    rpc AddBreakpoint(BreakpointAdd) returns (google.protobuf.Empty);
    rpc RemoveBreakpoint(BreakpointRemove) returns (google.protobuf.Empty);
    rpc GetBreakpoints(Session) returns (Breakpoints);

    rpc ListenEvents(Session) returns (stream Event);
}

// -------------------------------- Messages --------------------------------- //

message Session {
    string id = 1;
}

message Sessions {
    repeated Session sessions = 1;
}

message SourceSet {
    Session session = 1;
    string filename = 2;
    bytes data = 3;
}

message Breakpoint {
    string filename = 1;
    int32 lineno = 2;
}

message Breakpoints {
    repeated Breakpoint breakpoints = 1;
}

message BreakpointAdd {
    Session session = 1;
    Breakpoint breakpoint = 2;
}

message BreakpointRemove {
    Session session = 1;
    Breakpoint breakpoint = 2;
}

message Event {
    oneof event {
        LineChangedEvent line_changed_event = 1;
        StartedEvent started_event = 2;
        PausedEvent paused_event = 3;
        ResumedEvent resumed_event = 4;
        FinishedEvent finished_event = 5;
        StdoutEvent stdout_event = 6;
        StderrEvent stderr_event = 7;
    }
}

message LineChangedEvent {
    string filename = 1;
    int32 lineno = 2;
}

message StartedEvent {
}

message PausedEvent {
}

message ResumedEvent {
}

message FinishedEvent {
    string status = 1;
}


message StdoutEvent {
    string message = 1;
}

message StderrEvent {
    string message = 1;
}